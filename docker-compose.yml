version: '3.8'

services:
  postgres:
    image: postgres:latest
    volumes:
      - pgdata:/var/lib/postgresql/data
      - ./docker:/docker-entrypoint-initdb.d/
    environment:
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "5432:${POSTGRES_PORT}"

  rabbitmq:
    image: rabbitmq:3-management
    ports:
      - "5672:${RABBITMQ_PORT}"
      - "15672:15672"
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    environment:
      RABBITMQ_DEFAULT_USER: ${RABBITMQ_USER}
      RABBITMQ_DEFAULT_PASS: ${RABBITMQ_PASS}
    healthcheck:
      test: [ "CMD", "rabbitmqctl", "status" ]
      interval: 30s
      timeout: 10s
      retries: 5

  database:
    build:
      context: backend
      args:
        SERVICE: database
    environment:
      DATABASE_USERNAME: ${DATABASE_USERNAME}
      DATABASE_PASSWORD: ${DATABASE_PASSWORD}
      DATABASE_SCHEMA: ${DATABASE_SCHEMA}
      DATABASE_HOST: ${DATABASE_HOST}
      DATABASE_PORT: ${DATABASE_PORT}
      DATABASE_GRPCPORT: ${DATABASE_GRPCPORT}
    ports:
      - "${DATABASE_GRPCPORT}"
    depends_on:
      - postgres

  mail:
    build:
      context: backend
      args:
        SERVICE: mail
        COPY_PATH: ./templates
    env_file:
      - .env
      - prod.env
    depends_on:
      rabbitmq:
        condition: service_healthy

  api:
    build:
      context: backend
      args:
        SERVICE: api
    environment:
      API_PORT: ${API_PORT}
      API_JWTSECRET: ${API_JWTSECRET}
      API_RECAPTCHASECRET: ${API_RECAPTCHASECRET}
      API_GRPCSERVER: ${API_GRPCSERVER}
      API_DATABASESERVICE: ${API_DATABASESERVICE}
      API_RABBITMQ: ${API_RABBITMQ}
    ports:
      - "8080:${API_PORT}"
    depends_on:
      - minio
      - database
      - mail
      - ml

  ml:
    build: ml
    environment:
      PORT: ${ML_PORT}
    ports:
      - "${ML_PORT}"

  minio:
    image: minio/minio
    ports:
      - "9000:${MINIO_PORT}"
      - "9001:9001"
    volumes:
      - minio_storage:/data
    environment:
      MINIO_ROOT_USER: ${MINIO_ROOT_USER}
      MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASSWORD}
    command: server --console-address ":9001" /data

volumes:
  pgdata:
  rabbitmq_data:
  minio_storage: